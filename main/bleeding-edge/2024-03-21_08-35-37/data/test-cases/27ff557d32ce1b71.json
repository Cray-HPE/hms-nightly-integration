{"uid":"27ff557d32ce1b71","name":"capmcAPISetPowerCap","fullName":"api.4-build-pipeline-only.test_set_power_cap.tavern#capmcAPISetPowerCap","historyId":"dd408b17f7b8e55258fcff9f663cd89b","time":{"start":1711009755561,"stop":1711009755838,"duration":277},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"passed","steps":[{"name":"Stage 0: capmcAPISetPowerCap - setup1 - Get HSM Nodes","time":{"start":1711009755571,"stop":1711009755602,"duration":31},"status":"passed","steps":[],"attachments":[{"uid":"78fa6d1ddbdf4511","name":"stage_yaml","source":"78fa6d1ddbdf4511.yaml","type":"application/yaml","size":457},{"uid":"2127f1bda3068fcb","name":"rest_request","source":"2127f1bda3068fcb.yaml","type":"application/yaml","size":149},{"uid":"74f5267c25cae0b3","name":"rest_response","source":"74f5267c25cae0b3.yaml","type":"application/yaml","size":5771}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 1: capmcAPISetPowerCap - setup2 - get_power_cap_capabilities","time":{"start":1711009755603,"stop":1711009755646,"duration":43},"status":"passed","steps":[],"attachments":[{"uid":"cf6a6815efaebf0c","name":"stage_yaml","source":"cf6a6815efaebf0c.yaml","type":"application/yaml","size":472},{"uid":"b09b56f1e27c919c","name":"rest_request","source":"b09b56f1e27c919c.yaml","type":"application/yaml","size":173},{"uid":"d3a57a1f1a913a9f","name":"rest_response","source":"d3a57a1f1a913a9f.yaml","type":"application/yaml","size":515}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 2: capmcAPISetPowerCap - setup3 - Set HSM Node 0 to Off","time":{"start":1711009755647,"stop":1711009755656,"duration":9},"status":"passed","steps":[],"attachments":[{"uid":"751a402866d7541d","name":"stage_yaml","source":"751a402866d7541d.yaml","type":"application/yaml","size":247},{"uid":"30f3c191788dea83","name":"rest_request","source":"30f3c191788dea83.yaml","type":"application/yaml","size":173},{"uid":"bf028b5a58ed4c66","name":"rest_response","source":"bf028b5a58ed4c66.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 3: capmcAPISetPowerCap - setup4 - Set HSM Node 1 to Off","time":{"start":1711009755657,"stop":1711009755665,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"233af04191508324","name":"stage_yaml","source":"233af04191508324.yaml","type":"application/yaml","size":247},{"uid":"67dff1934d3deb7b","name":"rest_request","source":"67dff1934d3deb7b.yaml","type":"application/yaml","size":173},{"uid":"ccf403050f5dc4bc","name":"rest_response","source":"ccf403050f5dc4bc.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 4: capmcAPISetPowerCap - test1 - POST set_power_cap for powered off node - failure test","time":{"start":1711009755666,"stop":1711009755681,"duration":15},"status":"passed","steps":[],"attachments":[{"uid":"4c6f0d09cd145abc","name":"stage_yaml","source":"4c6f0d09cd145abc.yaml","type":"application/yaml","size":1395},{"uid":"7f82ec35f5f04c65","name":"rest_request","source":"7f82ec35f5f04c65.yaml","type":"application/yaml","size":214},{"uid":"f897a5ad074ec816","name":"rest_response","source":"f897a5ad074ec816.yaml","type":"application/yaml","size":287}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 5: capmcAPISetPowerCap - setup5 - Set HSM Node 0 to Ready","time":{"start":1711009755682,"stop":1711009755690,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"27e3362590c8f7be","name":"stage_yaml","source":"27e3362590c8f7be.yaml","type":"application/yaml","size":251},{"uid":"373cecbc38422e","name":"rest_request","source":"373cecbc38422e.yaml","type":"application/yaml","size":173},{"uid":"971de248734bfde9","name":"rest_response","source":"971de248734bfde9.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 6: capmcAPISetPowerCap - setup6 - Set HSM Node 1 to Ready","time":{"start":1711009755691,"stop":1711009755698,"duration":7},"status":"passed","steps":[],"attachments":[{"uid":"2012f57eff059ab9","name":"stage_yaml","source":"2012f57eff059ab9.yaml","type":"application/yaml","size":251},{"uid":"61655ee985f13420","name":"rest_request","source":"61655ee985f13420.yaml","type":"application/yaml","size":173},{"uid":"a9c7da0a457c3804","name":"rest_response","source":"a9c7da0a457c3804.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 7: capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes","time":{"start":1711009755699,"stop":1711009755719,"duration":20},"status":"passed","steps":[],"attachments":[{"uid":"3603e13eb76a1938","name":"stage_yaml","source":"3603e13eb76a1938.yaml","type":"application/yaml","size":903},{"uid":"4cd10f7a62d07a4d","name":"rest_request","source":"4cd10f7a62d07a4d.yaml","type":"application/yaml","size":286},{"uid":"60462a11d4c2fe2c","name":"rest_response","source":"60462a11d4c2fe2c.yaml","type":"application/yaml","size":186}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 8: capmcAPIGetPowerCap - test3 - POST get_power_cap verify power cap values","time":{"start":1711009755720,"stop":1711009755742,"duration":22},"status":"passed","steps":[],"attachments":[{"uid":"b6c8b7706268fd02","name":"stage_yaml","source":"b6c8b7706268fd02.yaml","type":"application/yaml","size":2415},{"uid":"e516cebee9b99ab6","name":"rest_request","source":"e516cebee9b99ab6.yaml","type":"application/yaml","size":160},{"uid":"6088efeee6b4187d","name":"rest_response","source":"6088efeee6b4187d.yaml","type":"application/yaml","size":326}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 9: capmcAPISetPowerCap - test4 - POST set_power_cap value larger than max - failure test","time":{"start":1711009755743,"stop":1711009755756,"duration":13},"status":"passed","steps":[],"attachments":[{"uid":"be6e942d340fdac5","name":"stage_yaml","source":"be6e942d340fdac5.yaml","type":"application/yaml","size":1466},{"uid":"f88ad5f36e79347a","name":"rest_request","source":"f88ad5f36e79347a.yaml","type":"application/yaml","size":218},{"uid":"f222222085e14a22","name":"rest_response","source":"f222222085e14a22.yaml","type":"application/yaml","size":326}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 10: capmcAPISetPowerCap - test5 - POST set_power_cap value less than min - failure test","time":{"start":1711009755756,"stop":1711009755769,"duration":13},"status":"passed","steps":[],"attachments":[{"uid":"8bc1e71d02135aa3","name":"stage_yaml","source":"8bc1e71d02135aa3.yaml","type":"application/yaml","size":1449},{"uid":"a18cf803954ed621","name":"rest_request","source":"a18cf803954ed621.yaml","type":"application/yaml","size":212},{"uid":"6d42bbb10c8f0742","name":"rest_response","source":"6d42bbb10c8f0742.yaml","type":"application/yaml","size":317}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 11: capmcAPISetPowerCap - test6 - POST set_power_cap to zero","time":{"start":1711009755770,"stop":1711009755785,"duration":15},"status":"passed","steps":[],"attachments":[{"uid":"bed48b34d6d064ea","name":"stage_yaml","source":"bed48b34d6d064ea.yaml","type":"application/yaml","size":759},{"uid":"cda901116dccef20","name":"rest_request","source":"cda901116dccef20.yaml","type":"application/yaml","size":212},{"uid":"3c5fc3e18a0730b7","name":"rest_response","source":"3c5fc3e18a0730b7.yaml","type":"application/yaml","size":186}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 12: capmcAPISetPowerCap - test7 - POST set_power_cap to zero second time - failure test","time":{"start":1711009755786,"stop":1711009755803,"duration":17},"status":"passed","steps":[],"attachments":[{"uid":"12c0094469bd19e","name":"stage_yaml","source":"12c0094469bd19e.yaml","type":"application/yaml","size":1477},{"uid":"9f28fcd7f719e63f","name":"rest_request","source":"9f28fcd7f719e63f.yaml","type":"application/yaml","size":212},{"uid":"1da441113e3abc84","name":"rest_response","source":"1da441113e3abc84.yaml","type":"application/yaml","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 13: capmcAPISetPowerCap - setup7 - Set HSM Node 0 to Off","time":{"start":1711009755804,"stop":1711009755812,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"4a33e65ce8829cc6","name":"stage_yaml","source":"4a33e65ce8829cc6.yaml","type":"application/yaml","size":247},{"uid":"2f1527e24d3df429","name":"rest_request","source":"2f1527e24d3df429.yaml","type":"application/yaml","size":173},{"uid":"d7479a39bbf10eb5","name":"rest_response","source":"d7479a39bbf10eb5.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 14: capmcAPISetPowerCap - setup8 - Set HSM Node 0 to its original state","time":{"start":1711009755813,"stop":1711009755821,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"1ebb6d87d0aa9b36","name":"stage_yaml","source":"1ebb6d87d0aa9b36.yaml","type":"application/yaml","size":279},{"uid":"5fa7b3d9c434e387","name":"rest_request","source":"5fa7b3d9c434e387.yaml","type":"application/yaml","size":172},{"uid":"a0febd25c01c1589","name":"rest_response","source":"a0febd25c01c1589.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 15: capmcAPISetPowerCap - setup9 - Set HSM Node 1 to Off","time":{"start":1711009755821,"stop":1711009755829,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"22441226ecac8fd6","name":"stage_yaml","source":"22441226ecac8fd6.yaml","type":"application/yaml","size":247},{"uid":"c2945bf8c6197cd9","name":"rest_request","source":"c2945bf8c6197cd9.yaml","type":"application/yaml","size":173},{"uid":"94117f7916f9e8df","name":"rest_response","source":"94117f7916f9e8df.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 16: capmcAPISetPowerCap - setup10 - Set HSM Node 1 to its original state","time":{"start":1711009755830,"stop":1711009755837,"duration":7},"status":"passed","steps":[],"attachments":[{"uid":"e872d282ec75a73a","name":"stage_yaml","source":"e872d282ec75a73a.yaml","type":"application/yaml","size":279},{"uid":"3851acc9a2a535fe","name":"rest_request","source":"3851acc9a2a535fe.yaml","type":"application/yaml","size":172},{"uid":"2dded1c5166e2ca0","name":"rest_response","source":"2dded1c5166e2ca0.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":17,"attachmentsCount":51,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"cray-capmc-hmth-test"},{"name":"suite","value":"build-pipeline-only"},{"name":"host","value":"d30d448cb3bf"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"api.4-build-pipeline-only.test_set_power_cap.tavern"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":72,"broken":0,"skipped":0,"passed":237,"unknown":0,"total":309},"items":[{"uid":"8139842e812b04c6","status":"passed","time":{"start":1710923367049,"stop":1710923367325,"duration":276}},{"uid":"2b23854ef41b88d2","status":"passed","time":{"start":1710836998775,"stop":1710836999047,"duration":272}},{"uid":"2b7e280c20356de6","status":"failed","statusDetails":"tavern.util.exceptions.TestFailError: Test 'capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes' failed:\n- Error calling validate function '<function validate_pykwalify at 0x776e3d0b35e0>':\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 106, in verify_generic\n        verifier.validate()\n      File \"/usr/lib/python3.9/site-packages/pykwalify/core.py\", line 194, in validate\n        raise SchemaError(u\"Schema validation failed:\\n - {error_msg}.\".format(\n    pykwalify.errors.SchemaError: <SchemaError: error code 2: Schema validation failed:\n     - Enum '22' does not exist. Path: '/e' Enum: [0].\n     - Value '[{'nid': 1014, 'e': 22, 'err_msg': 'Control (Node Power Limit) value (5036) is greater than maximum (925)'}, {'nid': 20, 'e': 22, 'err_msg': 'No NID supported controls specified'}]' is not of type 'none'. Path: '/nids'.: Path: '/'>\n\n    The above exception was the direct cause of the following exception:\n\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/response/base.py\", line 152, in _maybe_run_validate_functions\n        vf(response)\n      File \"/usr/lib/python3.9/site-packages/tavern/util/extfunctions.py\", line 98, in inner\n        result = func(response, *args, **kwargs)\n      File \"/usr/lib/python3.9/site-packages/tavern/testutils/helpers.py\", line 103, in validate_pykwalify\n        verify_generic(to_verify, schema)\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 109, in verify_generic\n        raise BadSchemaError() from e\n    tavern.util.exceptions.BadSchemaError","time":{"start":1710750604529,"stop":1710750604679,"duration":150}},{"uid":"4b9a58e3a4b760ce","status":"passed","time":{"start":1710664141205,"stop":1710664141467,"duration":262}},{"uid":"60c4aa6860eb1ba7","status":"passed","time":{"start":1710577764984,"stop":1710577765241,"duration":257}},{"uid":"14f95c1d38fb4a0c","status":"passed","time":{"start":1710491330753,"stop":1710491331012,"duration":259}},{"uid":"6b4bb40cb2db2116","status":"passed","time":{"start":1710405001488,"stop":1710405001742,"duration":254}},{"uid":"3658e1313c1b654a","status":"passed","time":{"start":1710318520644,"stop":1710318520925,"duration":281}},{"uid":"2c9513a4420d5616","status":"failed","statusDetails":"tavern.util.exceptions.TestFailError: Test 'capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes' failed:\n- Error calling validate function '<function validate_pykwalify at 0x7fede55fc5e0>':\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 106, in verify_generic\n        verifier.validate()\n      File \"/usr/lib/python3.9/site-packages/pykwalify/core.py\", line 194, in validate\n        raise SchemaError(u\"Schema validation failed:\\n - {error_msg}.\".format(\n    pykwalify.errors.SchemaError: <SchemaError: error code 2: Schema validation failed:\n     - Enum '22' does not exist. Path: '/e' Enum: [0].\n     - Value '[{'nid': 20, 'e': 22, 'err_msg': 'No NID supported controls specified'}, {'nid': 1022, 'e': 22, 'err_msg': 'Control (Node Power Limit) value (5036) is greater than maximum (925)'}]' is not of type 'none'. Path: '/nids'.: Path: '/'>\n\n    The above exception was the direct cause of the following exception:\n\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/response/base.py\", line 152, in _maybe_run_validate_functions\n        vf(response)\n      File \"/usr/lib/python3.9/site-packages/tavern/util/extfunctions.py\", line 98, in inner\n        result = func(response, *args, **kwargs)\n      File \"/usr/lib/python3.9/site-packages/tavern/testutils/helpers.py\", line 103, in validate_pykwalify\n        verify_generic(to_verify, schema)\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 109, in verify_generic\n        raise BadSchemaError() from e\n    tavern.util.exceptions.BadSchemaError","time":{"start":1710232127169,"stop":1710232127313,"duration":144}},{"uid":"ea8497bf1e94a25f","status":"passed","time":{"start":1710145716484,"stop":1710145716757,"duration":273}},{"uid":"f10ff2168818013c","status":"passed","time":{"start":1710059383821,"stop":1710059384087,"duration":266}},{"uid":"a5d1b68c98019f7a","status":"passed","time":{"start":1709972957987,"stop":1709972958238,"duration":251}},{"uid":"4aab072ddba5e1db","status":"failed","statusDetails":"tavern.util.exceptions.TestFailError: Test 'capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes' failed:\n- Error calling validate function '<function validate_pykwalify at 0x7fc2a1eac5e0>':\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 106, in verify_generic\n        verifier.validate()\n      File \"/usr/lib/python3.9/site-packages/pykwalify/core.py\", line 194, in validate\n        raise SchemaError(u\"Schema validation failed:\\n - {error_msg}.\".format(\n    pykwalify.errors.SchemaError: <SchemaError: error code 2: Schema validation failed:\n     - Enum '22' does not exist. Path: '/e' Enum: [0].\n     - Value '[{'nid': 1028, 'e': 22, 'err_msg': 'Control (Node Power Limit) value (5036) is greater than maximum (925)'}, {'nid': 20, 'e': 22, 'err_msg': 'No NID supported controls specified'}]' is not of type 'none'. Path: '/nids'.: Path: '/'>\n\n    The above exception was the direct cause of the following exception:\n\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/response/base.py\", line 152, in _maybe_run_validate_functions\n        vf(response)\n      File \"/usr/lib/python3.9/site-packages/tavern/util/extfunctions.py\", line 98, in inner\n        result = func(response, *args, **kwargs)\n      File \"/usr/lib/python3.9/site-packages/tavern/testutils/helpers.py\", line 103, in validate_pykwalify\n        verify_generic(to_verify, schema)\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 109, in verify_generic\n        raise BadSchemaError() from e\n    tavern.util.exceptions.BadSchemaError","time":{"start":1709886581731,"stop":1709886581876,"duration":145}},{"uid":"858b3980aa32d164","status":"failed","statusDetails":"tavern.util.exceptions.TestFailError: Test 'capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes' failed:\n- Error calling validate function '<function validate_pykwalify at 0x7f07a8b395e0>':\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 106, in verify_generic\n        verifier.validate()\n      File \"/usr/lib/python3.9/site-packages/pykwalify/core.py\", line 194, in validate\n        raise SchemaError(u\"Schema validation failed:\\n - {error_msg}.\".format(\n    pykwalify.errors.SchemaError: <SchemaError: error code 2: Schema validation failed:\n     - Enum '22' does not exist. Path: '/e' Enum: [0].\n     - Value '[{'nid': 1017, 'e': 22, 'err_msg': 'Control (Node Power Limit) value (5036) is greater than maximum (925)'}, {'nid': 20, 'e': 22, 'err_msg': 'No NID supported controls specified'}]' is not of type 'none'. Path: '/nids'.: Path: '/'>\n\n    The above exception was the direct cause of the following exception:\n\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/response/base.py\", line 152, in _maybe_run_validate_functions\n        vf(response)\n      File \"/usr/lib/python3.9/site-packages/tavern/util/extfunctions.py\", line 98, in inner\n        result = func(response, *args, **kwargs)\n      File \"/usr/lib/python3.9/site-packages/tavern/testutils/helpers.py\", line 103, in validate_pykwalify\n        verify_generic(to_verify, schema)\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 109, in verify_generic\n        raise BadSchemaError() from e\n    tavern.util.exceptions.BadSchemaError","time":{"start":1709800146564,"stop":1709800146709,"duration":145}},{"uid":"4be6612e0ce13459","status":"passed","time":{"start":1709713808019,"stop":1709713808276,"duration":257}},{"uid":"d24a0177e71351df","status":"passed","time":{"start":1709627374835,"stop":1709627375094,"duration":259}},{"uid":"9400b264330f5272","status":"passed","time":{"start":1709541701784,"stop":1709541702045,"duration":261}},{"uid":"49bb2dee1a4a3cbf","status":"passed","time":{"start":1709454561545,"stop":1709454561807,"duration":262}},{"uid":"db5f7da0f758a76b","status":"passed","time":{"start":1709368107162,"stop":1709368107402,"duration":240}},{"uid":"e8b3a90135659a6f","status":"failed","statusDetails":"tavern.util.exceptions.TestFailError: Test 'capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes' failed:\n- Error calling validate function '<function validate_pykwalify at 0x7f5a07fcb4c0>':\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 106, in verify_generic\n        verifier.validate()\n      File \"/usr/lib/python3.9/site-packages/pykwalify/core.py\", line 194, in validate\n        raise SchemaError(u\"Schema validation failed:\\n - {error_msg}.\".format(\n    pykwalify.errors.SchemaError: <SchemaError: error code 2: Schema validation failed:\n     - Enum '22' does not exist. Path: '/e' Enum: [0].\n     - Value '[{'nid': 20, 'e': 22, 'err_msg': 'No NID supported controls specified'}, {'nid': 1015, 'e': 22, 'err_msg': 'Control (Node Power Limit) value (5036) is greater than maximum (925)'}]' is not of type 'none'. Path: '/nids'.: Path: '/'>\n\n    The above exception was the direct cause of the following exception:\n\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/response/base.py\", line 152, in _maybe_run_validate_functions\n        vf(response)\n      File \"/usr/lib/python3.9/site-packages/tavern/util/extfunctions.py\", line 98, in inner\n        result = func(response, *args, **kwargs)\n      File \"/usr/lib/python3.9/site-packages/tavern/testutils/helpers.py\", line 103, in validate_pykwalify\n        verify_generic(to_verify, schema)\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 109, in verify_generic\n        raise BadSchemaError() from e\n    tavern.util.exceptions.BadSchemaError","time":{"start":1709281787717,"stop":1709281787873,"duration":156}}]},"tags":[]},"source":"27ff557d32ce1b71.json","parameterValues":[]}