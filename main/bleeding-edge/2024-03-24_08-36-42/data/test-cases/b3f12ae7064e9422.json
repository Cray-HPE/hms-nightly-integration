{"uid":"b3f12ae7064e9422","name":"capmcAPISetPowerCap","fullName":"api.4-build-pipeline-only.test_set_power_cap.tavern#capmcAPISetPowerCap","historyId":"dd408b17f7b8e55258fcff9f663cd89b","time":{"start":1711268992434,"stop":1711268992697,"duration":263},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"passed","steps":[{"name":"Stage 0: capmcAPISetPowerCap - setup1 - Get HSM Nodes","time":{"start":1711268992444,"stop":1711268992473,"duration":29},"status":"passed","steps":[],"attachments":[{"uid":"12b634cf5f9280b3","name":"stage_yaml","source":"12b634cf5f9280b3.yaml","type":"application/yaml","size":457},{"uid":"c82cc44aa3b368ff","name":"rest_request","source":"c82cc44aa3b368ff.yaml","type":"application/yaml","size":149},{"uid":"2618d45342dad210","name":"rest_response","source":"2618d45342dad210.yaml","type":"application/yaml","size":5774}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 1: capmcAPISetPowerCap - setup2 - get_power_cap_capabilities","time":{"start":1711268992474,"stop":1711268992516,"duration":42},"status":"passed","steps":[],"attachments":[{"uid":"c3688db46c8c7ced","name":"stage_yaml","source":"c3688db46c8c7ced.yaml","type":"application/yaml","size":472},{"uid":"de17fe21af2d7cef","name":"rest_request","source":"de17fe21af2d7cef.yaml","type":"application/yaml","size":173},{"uid":"80f7938ce2199d7b","name":"rest_response","source":"80f7938ce2199d7b.yaml","type":"application/yaml","size":515}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 2: capmcAPISetPowerCap - setup3 - Set HSM Node 0 to Off","time":{"start":1711268992517,"stop":1711268992525,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"53fea9a0e93279be","name":"stage_yaml","source":"53fea9a0e93279be.yaml","type":"application/yaml","size":247},{"uid":"4dd022dd1f9e4e0e","name":"rest_request","source":"4dd022dd1f9e4e0e.yaml","type":"application/yaml","size":173},{"uid":"e29e8616477a4479","name":"rest_response","source":"e29e8616477a4479.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 3: capmcAPISetPowerCap - setup4 - Set HSM Node 1 to Off","time":{"start":1711268992526,"stop":1711268992533,"duration":7},"status":"passed","steps":[],"attachments":[{"uid":"3f9582887e6b9427","name":"stage_yaml","source":"3f9582887e6b9427.yaml","type":"application/yaml","size":247},{"uid":"8e83270cb0de1cbb","name":"rest_request","source":"8e83270cb0de1cbb.yaml","type":"application/yaml","size":173},{"uid":"40a3504cf87ef942","name":"rest_response","source":"40a3504cf87ef942.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 4: capmcAPISetPowerCap - test1 - POST set_power_cap for powered off node - failure test","time":{"start":1711268992534,"stop":1711268992548,"duration":14},"status":"passed","steps":[],"attachments":[{"uid":"e8f8113dbbb2b842","name":"stage_yaml","source":"e8f8113dbbb2b842.yaml","type":"application/yaml","size":1395},{"uid":"238c944f27e74e36","name":"rest_request","source":"238c944f27e74e36.yaml","type":"application/yaml","size":214},{"uid":"898538a0421f06c","name":"rest_response","source":"898538a0421f06c.yaml","type":"application/yaml","size":287}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 5: capmcAPISetPowerCap - setup5 - Set HSM Node 0 to Ready","time":{"start":1711268992549,"stop":1711268992556,"duration":7},"status":"passed","steps":[],"attachments":[{"uid":"67da9dee937501f0","name":"stage_yaml","source":"67da9dee937501f0.yaml","type":"application/yaml","size":251},{"uid":"c00c6efbe60c386b","name":"rest_request","source":"c00c6efbe60c386b.yaml","type":"application/yaml","size":173},{"uid":"2614a8318f606770","name":"rest_response","source":"2614a8318f606770.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 6: capmcAPISetPowerCap - setup6 - Set HSM Node 1 to Ready","time":{"start":1711268992558,"stop":1711268992567,"duration":9},"status":"passed","steps":[],"attachments":[{"uid":"c00cda29f1c3e76b","name":"stage_yaml","source":"c00cda29f1c3e76b.yaml","type":"application/yaml","size":251},{"uid":"99ee73ed9c720fa7","name":"rest_request","source":"99ee73ed9c720fa7.yaml","type":"application/yaml","size":173},{"uid":"2f01bea50a99674b","name":"rest_response","source":"2f01bea50a99674b.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 7: capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes","time":{"start":1711268992568,"stop":1711268992586,"duration":18},"status":"passed","steps":[],"attachments":[{"uid":"5d2e91995febcd8f","name":"stage_yaml","source":"5d2e91995febcd8f.yaml","type":"application/yaml","size":903},{"uid":"a310e2c7f573338f","name":"rest_request","source":"a310e2c7f573338f.yaml","type":"application/yaml","size":286},{"uid":"d541ca356c7cfbab","name":"rest_response","source":"d541ca356c7cfbab.yaml","type":"application/yaml","size":186}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 8: capmcAPIGetPowerCap - test3 - POST get_power_cap verify power cap values","time":{"start":1711268992586,"stop":1711268992606,"duration":20},"status":"passed","steps":[],"attachments":[{"uid":"7f240b4f867eb2b9","name":"stage_yaml","source":"7f240b4f867eb2b9.yaml","type":"application/yaml","size":2415},{"uid":"865649709a1bd564","name":"rest_request","source":"865649709a1bd564.yaml","type":"application/yaml","size":160},{"uid":"76376cef2d2de9b2","name":"rest_response","source":"76376cef2d2de9b2.yaml","type":"application/yaml","size":326}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 9: capmcAPISetPowerCap - test4 - POST set_power_cap value larger than max - failure test","time":{"start":1711268992606,"stop":1711268992619,"duration":13},"status":"passed","steps":[],"attachments":[{"uid":"ec38e3678e4d2c1f","name":"stage_yaml","source":"ec38e3678e4d2c1f.yaml","type":"application/yaml","size":1466},{"uid":"d34a58e1a1db6cf3","name":"rest_request","source":"d34a58e1a1db6cf3.yaml","type":"application/yaml","size":218},{"uid":"c7b0aec1a00a4bd6","name":"rest_response","source":"c7b0aec1a00a4bd6.yaml","type":"application/yaml","size":326}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 10: capmcAPISetPowerCap - test5 - POST set_power_cap value less than min - failure test","time":{"start":1711268992620,"stop":1711268992632,"duration":12},"status":"passed","steps":[],"attachments":[{"uid":"91247947872de401","name":"stage_yaml","source":"91247947872de401.yaml","type":"application/yaml","size":1449},{"uid":"c1d14fd8fd44d111","name":"rest_request","source":"c1d14fd8fd44d111.yaml","type":"application/yaml","size":212},{"uid":"88d88dca16fe07e9","name":"rest_response","source":"88d88dca16fe07e9.yaml","type":"application/yaml","size":317}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 11: capmcAPISetPowerCap - test6 - POST set_power_cap to zero","time":{"start":1711268992633,"stop":1711268992647,"duration":14},"status":"passed","steps":[],"attachments":[{"uid":"80d83152d2052223","name":"stage_yaml","source":"80d83152d2052223.yaml","type":"application/yaml","size":759},{"uid":"d987d9c967ba8d96","name":"rest_request","source":"d987d9c967ba8d96.yaml","type":"application/yaml","size":212},{"uid":"d6588b6f217dad51","name":"rest_response","source":"d6588b6f217dad51.yaml","type":"application/yaml","size":186}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 12: capmcAPISetPowerCap - test7 - POST set_power_cap to zero second time - failure test","time":{"start":1711268992648,"stop":1711268992664,"duration":16},"status":"passed","steps":[],"attachments":[{"uid":"a8299e75a7a03bb5","name":"stage_yaml","source":"a8299e75a7a03bb5.yaml","type":"application/yaml","size":1477},{"uid":"6ee072f42eaee1cc","name":"rest_request","source":"6ee072f42eaee1cc.yaml","type":"application/yaml","size":212},{"uid":"d5000b9f806926a2","name":"rest_response","source":"d5000b9f806926a2.yaml","type":"application/yaml","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 13: capmcAPISetPowerCap - setup7 - Set HSM Node 0 to Off","time":{"start":1711268992664,"stop":1711268992672,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"c6b1174389462a48","name":"stage_yaml","source":"c6b1174389462a48.yaml","type":"application/yaml","size":247},{"uid":"e23fc60de21e0153","name":"rest_request","source":"e23fc60de21e0153.yaml","type":"application/yaml","size":173},{"uid":"a1ec0e48a1d8d502","name":"rest_response","source":"a1ec0e48a1d8d502.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 14: capmcAPISetPowerCap - setup8 - Set HSM Node 0 to its original state","time":{"start":1711268992673,"stop":1711268992681,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"3560a971b2217d45","name":"stage_yaml","source":"3560a971b2217d45.yaml","type":"application/yaml","size":279},{"uid":"5793e6a4878e8d9f","name":"rest_request","source":"5793e6a4878e8d9f.yaml","type":"application/yaml","size":172},{"uid":"a8f51e393618025","name":"rest_response","source":"a8f51e393618025.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 15: capmcAPISetPowerCap - setup9 - Set HSM Node 1 to Off","time":{"start":1711268992682,"stop":1711268992690,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"752a28f4269820e3","name":"stage_yaml","source":"752a28f4269820e3.yaml","type":"application/yaml","size":247},{"uid":"969c3b4c033a7931","name":"rest_request","source":"969c3b4c033a7931.yaml","type":"application/yaml","size":173},{"uid":"2b451c57ad78d7d","name":"rest_response","source":"2b451c57ad78d7d.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 16: capmcAPISetPowerCap - setup10 - Set HSM Node 1 to its original state","time":{"start":1711268992690,"stop":1711268992697,"duration":7},"status":"passed","steps":[],"attachments":[{"uid":"a145458b92176c43","name":"stage_yaml","source":"a145458b92176c43.yaml","type":"application/yaml","size":279},{"uid":"25373597315d447a","name":"rest_request","source":"25373597315d447a.yaml","type":"application/yaml","size":173},{"uid":"7f17f74623b98afe","name":"rest_response","source":"7f17f74623b98afe.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":17,"attachmentsCount":51,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"cray-capmc-hmth-test"},{"name":"suite","value":"build-pipeline-only"},{"name":"host","value":"9f6934ac698c"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"api.4-build-pipeline-only.test_set_power_cap.tavern"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":72,"broken":0,"skipped":0,"passed":240,"unknown":0,"total":312},"items":[{"uid":"c9429c11098ad360","status":"passed","time":{"start":1711182476487,"stop":1711182476748,"duration":261}},{"uid":"36fc538a5d4f77bb","status":"passed","time":{"start":1711096308311,"stop":1711096308553,"duration":242}},{"uid":"27ff557d32ce1b71","status":"passed","time":{"start":1711009755561,"stop":1711009755838,"duration":277}},{"uid":"8139842e812b04c6","status":"passed","time":{"start":1710923367049,"stop":1710923367325,"duration":276}},{"uid":"2b23854ef41b88d2","status":"passed","time":{"start":1710836998775,"stop":1710836999047,"duration":272}},{"uid":"2b7e280c20356de6","status":"failed","statusDetails":"tavern.util.exceptions.TestFailError: Test 'capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes' failed:\n- Error calling validate function '<function validate_pykwalify at 0x776e3d0b35e0>':\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 106, in verify_generic\n        verifier.validate()\n      File \"/usr/lib/python3.9/site-packages/pykwalify/core.py\", line 194, in validate\n        raise SchemaError(u\"Schema validation failed:\\n - {error_msg}.\".format(\n    pykwalify.errors.SchemaError: <SchemaError: error code 2: Schema validation failed:\n     - Enum '22' does not exist. Path: '/e' Enum: [0].\n     - Value '[{'nid': 1014, 'e': 22, 'err_msg': 'Control (Node Power Limit) value (5036) is greater than maximum (925)'}, {'nid': 20, 'e': 22, 'err_msg': 'No NID supported controls specified'}]' is not of type 'none'. Path: '/nids'.: Path: '/'>\n\n    The above exception was the direct cause of the following exception:\n\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/response/base.py\", line 152, in _maybe_run_validate_functions\n        vf(response)\n      File \"/usr/lib/python3.9/site-packages/tavern/util/extfunctions.py\", line 98, in inner\n        result = func(response, *args, **kwargs)\n      File \"/usr/lib/python3.9/site-packages/tavern/testutils/helpers.py\", line 103, in validate_pykwalify\n        verify_generic(to_verify, schema)\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 109, in verify_generic\n        raise BadSchemaError() from e\n    tavern.util.exceptions.BadSchemaError","time":{"start":1710750604529,"stop":1710750604679,"duration":150}},{"uid":"4b9a58e3a4b760ce","status":"passed","time":{"start":1710664141205,"stop":1710664141467,"duration":262}},{"uid":"60c4aa6860eb1ba7","status":"passed","time":{"start":1710577764984,"stop":1710577765241,"duration":257}},{"uid":"14f95c1d38fb4a0c","status":"passed","time":{"start":1710491330753,"stop":1710491331012,"duration":259}},{"uid":"6b4bb40cb2db2116","status":"passed","time":{"start":1710405001488,"stop":1710405001742,"duration":254}},{"uid":"3658e1313c1b654a","status":"passed","time":{"start":1710318520644,"stop":1710318520925,"duration":281}},{"uid":"2c9513a4420d5616","status":"failed","statusDetails":"tavern.util.exceptions.TestFailError: Test 'capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes' failed:\n- Error calling validate function '<function validate_pykwalify at 0x7fede55fc5e0>':\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 106, in verify_generic\n        verifier.validate()\n      File \"/usr/lib/python3.9/site-packages/pykwalify/core.py\", line 194, in validate\n        raise SchemaError(u\"Schema validation failed:\\n - {error_msg}.\".format(\n    pykwalify.errors.SchemaError: <SchemaError: error code 2: Schema validation failed:\n     - Enum '22' does not exist. Path: '/e' Enum: [0].\n     - Value '[{'nid': 20, 'e': 22, 'err_msg': 'No NID supported controls specified'}, {'nid': 1022, 'e': 22, 'err_msg': 'Control (Node Power Limit) value (5036) is greater than maximum (925)'}]' is not of type 'none'. Path: '/nids'.: Path: '/'>\n\n    The above exception was the direct cause of the following exception:\n\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/response/base.py\", line 152, in _maybe_run_validate_functions\n        vf(response)\n      File \"/usr/lib/python3.9/site-packages/tavern/util/extfunctions.py\", line 98, in inner\n        result = func(response, *args, **kwargs)\n      File \"/usr/lib/python3.9/site-packages/tavern/testutils/helpers.py\", line 103, in validate_pykwalify\n        verify_generic(to_verify, schema)\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 109, in verify_generic\n        raise BadSchemaError() from e\n    tavern.util.exceptions.BadSchemaError","time":{"start":1710232127169,"stop":1710232127313,"duration":144}},{"uid":"ea8497bf1e94a25f","status":"passed","time":{"start":1710145716484,"stop":1710145716757,"duration":273}},{"uid":"f10ff2168818013c","status":"passed","time":{"start":1710059383821,"stop":1710059384087,"duration":266}},{"uid":"a5d1b68c98019f7a","status":"passed","time":{"start":1709972957987,"stop":1709972958238,"duration":251}},{"uid":"4aab072ddba5e1db","status":"failed","statusDetails":"tavern.util.exceptions.TestFailError: Test 'capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes' failed:\n- Error calling validate function '<function validate_pykwalify at 0x7fc2a1eac5e0>':\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 106, in verify_generic\n        verifier.validate()\n      File \"/usr/lib/python3.9/site-packages/pykwalify/core.py\", line 194, in validate\n        raise SchemaError(u\"Schema validation failed:\\n - {error_msg}.\".format(\n    pykwalify.errors.SchemaError: <SchemaError: error code 2: Schema validation failed:\n     - Enum '22' does not exist. Path: '/e' Enum: [0].\n     - Value '[{'nid': 1028, 'e': 22, 'err_msg': 'Control (Node Power Limit) value (5036) is greater than maximum (925)'}, {'nid': 20, 'e': 22, 'err_msg': 'No NID supported controls specified'}]' is not of type 'none'. Path: '/nids'.: Path: '/'>\n\n    The above exception was the direct cause of the following exception:\n\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/response/base.py\", line 152, in _maybe_run_validate_functions\n        vf(response)\n      File \"/usr/lib/python3.9/site-packages/tavern/util/extfunctions.py\", line 98, in inner\n        result = func(response, *args, **kwargs)\n      File \"/usr/lib/python3.9/site-packages/tavern/testutils/helpers.py\", line 103, in validate_pykwalify\n        verify_generic(to_verify, schema)\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 109, in verify_generic\n        raise BadSchemaError() from e\n    tavern.util.exceptions.BadSchemaError","time":{"start":1709886581731,"stop":1709886581876,"duration":145}},{"uid":"858b3980aa32d164","status":"failed","statusDetails":"tavern.util.exceptions.TestFailError: Test 'capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes' failed:\n- Error calling validate function '<function validate_pykwalify at 0x7f07a8b395e0>':\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 106, in verify_generic\n        verifier.validate()\n      File \"/usr/lib/python3.9/site-packages/pykwalify/core.py\", line 194, in validate\n        raise SchemaError(u\"Schema validation failed:\\n - {error_msg}.\".format(\n    pykwalify.errors.SchemaError: <SchemaError: error code 2: Schema validation failed:\n     - Enum '22' does not exist. Path: '/e' Enum: [0].\n     - Value '[{'nid': 1017, 'e': 22, 'err_msg': 'Control (Node Power Limit) value (5036) is greater than maximum (925)'}, {'nid': 20, 'e': 22, 'err_msg': 'No NID supported controls specified'}]' is not of type 'none'. Path: '/nids'.: Path: '/'>\n\n    The above exception was the direct cause of the following exception:\n\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/response/base.py\", line 152, in _maybe_run_validate_functions\n        vf(response)\n      File \"/usr/lib/python3.9/site-packages/tavern/util/extfunctions.py\", line 98, in inner\n        result = func(response, *args, **kwargs)\n      File \"/usr/lib/python3.9/site-packages/tavern/testutils/helpers.py\", line 103, in validate_pykwalify\n        verify_generic(to_verify, schema)\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 109, in verify_generic\n        raise BadSchemaError() from e\n    tavern.util.exceptions.BadSchemaError","time":{"start":1709800146564,"stop":1709800146709,"duration":145}},{"uid":"4be6612e0ce13459","status":"passed","time":{"start":1709713808019,"stop":1709713808276,"duration":257}},{"uid":"d24a0177e71351df","status":"passed","time":{"start":1709627374835,"stop":1709627375094,"duration":259}},{"uid":"9400b264330f5272","status":"passed","time":{"start":1709541701784,"stop":1709541702045,"duration":261}}]},"tags":[]},"source":"b3f12ae7064e9422.json","parameterValues":[]}