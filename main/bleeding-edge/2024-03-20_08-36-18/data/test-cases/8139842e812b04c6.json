{"uid":"8139842e812b04c6","name":"capmcAPISetPowerCap","fullName":"api.4-build-pipeline-only.test_set_power_cap.tavern#capmcAPISetPowerCap","historyId":"dd408b17f7b8e55258fcff9f663cd89b","time":{"start":1710923367049,"stop":1710923367325,"duration":276},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"passed","steps":[{"name":"Stage 0: capmcAPISetPowerCap - setup1 - Get HSM Nodes","time":{"start":1710923367059,"stop":1710923367089,"duration":30},"status":"passed","steps":[],"attachments":[{"uid":"2c9398721c9e524f","name":"stage_yaml","source":"2c9398721c9e524f.yaml","type":"application/yaml","size":457},{"uid":"b6f719d374848830","name":"rest_request","source":"b6f719d374848830.yaml","type":"application/yaml","size":149},{"uid":"dd493181773fe66","name":"rest_response","source":"dd493181773fe66.yaml","type":"application/yaml","size":5769}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 1: capmcAPISetPowerCap - setup2 - get_power_cap_capabilities","time":{"start":1710923367089,"stop":1710923367133,"duration":44},"status":"passed","steps":[],"attachments":[{"uid":"62bd463b67446882","name":"stage_yaml","source":"62bd463b67446882.yaml","type":"application/yaml","size":472},{"uid":"2570984ea57faf35","name":"rest_request","source":"2570984ea57faf35.yaml","type":"application/yaml","size":173},{"uid":"e5d2834b8ddd71bd","name":"rest_response","source":"e5d2834b8ddd71bd.yaml","type":"application/yaml","size":515}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 2: capmcAPISetPowerCap - setup3 - Set HSM Node 0 to Off","time":{"start":1710923367133,"stop":1710923367141,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"29d13908af9f51ce","name":"stage_yaml","source":"29d13908af9f51ce.yaml","type":"application/yaml","size":247},{"uid":"272a44742abc836e","name":"rest_request","source":"272a44742abc836e.yaml","type":"application/yaml","size":173},{"uid":"4a8495ce102eae30","name":"rest_response","source":"4a8495ce102eae30.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 3: capmcAPISetPowerCap - setup4 - Set HSM Node 1 to Off","time":{"start":1710923367142,"stop":1710923367150,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"b891fdf02f61f4bd","name":"stage_yaml","source":"b891fdf02f61f4bd.yaml","type":"application/yaml","size":247},{"uid":"2483733dbaa08b32","name":"rest_request","source":"2483733dbaa08b32.yaml","type":"application/yaml","size":173},{"uid":"3486def5a86994c8","name":"rest_response","source":"3486def5a86994c8.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 4: capmcAPISetPowerCap - test1 - POST set_power_cap for powered off node - failure test","time":{"start":1710923367151,"stop":1710923367166,"duration":15},"status":"passed","steps":[],"attachments":[{"uid":"86b570c9e85247d0","name":"stage_yaml","source":"86b570c9e85247d0.yaml","type":"application/yaml","size":1395},{"uid":"12844421c6a3fc30","name":"rest_request","source":"12844421c6a3fc30.yaml","type":"application/yaml","size":214},{"uid":"dbcbb8dda5ac8250","name":"rest_response","source":"dbcbb8dda5ac8250.yaml","type":"application/yaml","size":287}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 5: capmcAPISetPowerCap - setup5 - Set HSM Node 0 to Ready","time":{"start":1710923367166,"stop":1710923367175,"duration":9},"status":"passed","steps":[],"attachments":[{"uid":"153b09cb0a4ed3c3","name":"stage_yaml","source":"153b09cb0a4ed3c3.yaml","type":"application/yaml","size":251},{"uid":"19d817cab46ce067","name":"rest_request","source":"19d817cab46ce067.yaml","type":"application/yaml","size":173},{"uid":"a3b837f3167b6f44","name":"rest_response","source":"a3b837f3167b6f44.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 6: capmcAPISetPowerCap - setup6 - Set HSM Node 1 to Ready","time":{"start":1710923367176,"stop":1710923367184,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"1dc7305e8bfe14a3","name":"stage_yaml","source":"1dc7305e8bfe14a3.yaml","type":"application/yaml","size":251},{"uid":"8f41dc1333d14d71","name":"rest_request","source":"8f41dc1333d14d71.yaml","type":"application/yaml","size":173},{"uid":"bcead842f8ae8f6c","name":"rest_response","source":"bcead842f8ae8f6c.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 7: capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes","time":{"start":1710923367185,"stop":1710923367205,"duration":20},"status":"passed","steps":[],"attachments":[{"uid":"bef92c3b0f063bed","name":"stage_yaml","source":"bef92c3b0f063bed.yaml","type":"application/yaml","size":903},{"uid":"4856daa995d17a7d","name":"rest_request","source":"4856daa995d17a7d.yaml","type":"application/yaml","size":286},{"uid":"a68576cd45ead1c3","name":"rest_response","source":"a68576cd45ead1c3.yaml","type":"application/yaml","size":186}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 8: capmcAPIGetPowerCap - test3 - POST get_power_cap verify power cap values","time":{"start":1710923367206,"stop":1710923367227,"duration":21},"status":"passed","steps":[],"attachments":[{"uid":"33d507add16d4dc6","name":"stage_yaml","source":"33d507add16d4dc6.yaml","type":"application/yaml","size":2415},{"uid":"6e1a0f3b3b4a235c","name":"rest_request","source":"6e1a0f3b3b4a235c.yaml","type":"application/yaml","size":160},{"uid":"f78e8a73c30a4854","name":"rest_response","source":"f78e8a73c30a4854.yaml","type":"application/yaml","size":326}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 9: capmcAPISetPowerCap - test4 - POST set_power_cap value larger than max - failure test","time":{"start":1710923367228,"stop":1710923367241,"duration":13},"status":"passed","steps":[],"attachments":[{"uid":"1db2694a285e1a66","name":"stage_yaml","source":"1db2694a285e1a66.yaml","type":"application/yaml","size":1466},{"uid":"1acc7af737cf35c8","name":"rest_request","source":"1acc7af737cf35c8.yaml","type":"application/yaml","size":218},{"uid":"fce0dde4f9d0ef88","name":"rest_response","source":"fce0dde4f9d0ef88.yaml","type":"application/yaml","size":326}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 10: capmcAPISetPowerCap - test5 - POST set_power_cap value less than min - failure test","time":{"start":1710923367242,"stop":1710923367255,"duration":13},"status":"passed","steps":[],"attachments":[{"uid":"f6d72e480473190b","name":"stage_yaml","source":"f6d72e480473190b.yaml","type":"application/yaml","size":1449},{"uid":"dd10450449484136","name":"rest_request","source":"dd10450449484136.yaml","type":"application/yaml","size":212},{"uid":"5d9a9c8f27c438ad","name":"rest_response","source":"5d9a9c8f27c438ad.yaml","type":"application/yaml","size":317}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 11: capmcAPISetPowerCap - test6 - POST set_power_cap to zero","time":{"start":1710923367255,"stop":1710923367271,"duration":16},"status":"passed","steps":[],"attachments":[{"uid":"9e079d990e35c95d","name":"stage_yaml","source":"9e079d990e35c95d.yaml","type":"application/yaml","size":759},{"uid":"35a1f26bc0902371","name":"rest_request","source":"35a1f26bc0902371.yaml","type":"application/yaml","size":212},{"uid":"2461cd0204a62d30","name":"rest_response","source":"2461cd0204a62d30.yaml","type":"application/yaml","size":186}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 12: capmcAPISetPowerCap - test7 - POST set_power_cap to zero second time - failure test","time":{"start":1710923367272,"stop":1710923367290,"duration":18},"status":"passed","steps":[],"attachments":[{"uid":"bd2726ff7d2cfa18","name":"stage_yaml","source":"bd2726ff7d2cfa18.yaml","type":"application/yaml","size":1477},{"uid":"70a20175a634f6c7","name":"rest_request","source":"70a20175a634f6c7.yaml","type":"application/yaml","size":212},{"uid":"2890fcab3fc4df2c","name":"rest_response","source":"2890fcab3fc4df2c.yaml","type":"application/yaml","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 13: capmcAPISetPowerCap - setup7 - Set HSM Node 0 to Off","time":{"start":1710923367290,"stop":1710923367299,"duration":9},"status":"passed","steps":[],"attachments":[{"uid":"f891a6733050974e","name":"stage_yaml","source":"f891a6733050974e.yaml","type":"application/yaml","size":247},{"uid":"c91a0fad3cfe5c0a","name":"rest_request","source":"c91a0fad3cfe5c0a.yaml","type":"application/yaml","size":173},{"uid":"a9d8364c99efd278","name":"rest_response","source":"a9d8364c99efd278.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 14: capmcAPISetPowerCap - setup8 - Set HSM Node 0 to its original state","time":{"start":1710923367300,"stop":1710923367307,"duration":7},"status":"passed","steps":[],"attachments":[{"uid":"39dba1d350a4b5e5","name":"stage_yaml","source":"39dba1d350a4b5e5.yaml","type":"application/yaml","size":279},{"uid":"74f1cc9f19e19e68","name":"rest_request","source":"74f1cc9f19e19e68.yaml","type":"application/yaml","size":172},{"uid":"72890531cd809ce5","name":"rest_response","source":"72890531cd809ce5.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 15: capmcAPISetPowerCap - setup9 - Set HSM Node 1 to Off","time":{"start":1710923367308,"stop":1710923367316,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"370f6d32289eaa07","name":"stage_yaml","source":"370f6d32289eaa07.yaml","type":"application/yaml","size":247},{"uid":"cc407b32984074f9","name":"rest_request","source":"cc407b32984074f9.yaml","type":"application/yaml","size":173},{"uid":"c5add6913de86260","name":"rest_response","source":"c5add6913de86260.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"Stage 16: capmcAPISetPowerCap - setup10 - Set HSM Node 1 to its original state","time":{"start":1710923367316,"stop":1710923367324,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"817c2040317fa7d","name":"stage_yaml","source":"817c2040317fa7d.yaml","type":"application/yaml","size":279},{"uid":"fefcbf7de040964d","name":"rest_request","source":"fefcbf7de040964d.yaml","type":"application/yaml","size":172},{"uid":"9c2ea659d122640","name":"rest_response","source":"9c2ea659d122640.yaml","type":"application/yaml","size":134}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":17,"attachmentsCount":51,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"cray-capmc-hmth-test"},{"name":"suite","value":"build-pipeline-only"},{"name":"host","value":"65c8c641fda1"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"api.4-build-pipeline-only.test_set_power_cap.tavern"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":72,"broken":0,"skipped":0,"passed":236,"unknown":0,"total":308},"items":[{"uid":"2b23854ef41b88d2","status":"passed","time":{"start":1710836998775,"stop":1710836999047,"duration":272}},{"uid":"2b7e280c20356de6","status":"failed","statusDetails":"tavern.util.exceptions.TestFailError: Test 'capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes' failed:\n- Error calling validate function '<function validate_pykwalify at 0x776e3d0b35e0>':\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 106, in verify_generic\n        verifier.validate()\n      File \"/usr/lib/python3.9/site-packages/pykwalify/core.py\", line 194, in validate\n        raise SchemaError(u\"Schema validation failed:\\n - {error_msg}.\".format(\n    pykwalify.errors.SchemaError: <SchemaError: error code 2: Schema validation failed:\n     - Enum '22' does not exist. Path: '/e' Enum: [0].\n     - Value '[{'nid': 1014, 'e': 22, 'err_msg': 'Control (Node Power Limit) value (5036) is greater than maximum (925)'}, {'nid': 20, 'e': 22, 'err_msg': 'No NID supported controls specified'}]' is not of type 'none'. Path: '/nids'.: Path: '/'>\n\n    The above exception was the direct cause of the following exception:\n\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/response/base.py\", line 152, in _maybe_run_validate_functions\n        vf(response)\n      File \"/usr/lib/python3.9/site-packages/tavern/util/extfunctions.py\", line 98, in inner\n        result = func(response, *args, **kwargs)\n      File \"/usr/lib/python3.9/site-packages/tavern/testutils/helpers.py\", line 103, in validate_pykwalify\n        verify_generic(to_verify, schema)\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 109, in verify_generic\n        raise BadSchemaError() from e\n    tavern.util.exceptions.BadSchemaError","time":{"start":1710750604529,"stop":1710750604679,"duration":150}},{"uid":"4b9a58e3a4b760ce","status":"passed","time":{"start":1710664141205,"stop":1710664141467,"duration":262}},{"uid":"60c4aa6860eb1ba7","status":"passed","time":{"start":1710577764984,"stop":1710577765241,"duration":257}},{"uid":"14f95c1d38fb4a0c","status":"passed","time":{"start":1710491330753,"stop":1710491331012,"duration":259}},{"uid":"6b4bb40cb2db2116","status":"passed","time":{"start":1710405001488,"stop":1710405001742,"duration":254}},{"uid":"3658e1313c1b654a","status":"passed","time":{"start":1710318520644,"stop":1710318520925,"duration":281}},{"uid":"2c9513a4420d5616","status":"failed","statusDetails":"tavern.util.exceptions.TestFailError: Test 'capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes' failed:\n- Error calling validate function '<function validate_pykwalify at 0x7fede55fc5e0>':\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 106, in verify_generic\n        verifier.validate()\n      File \"/usr/lib/python3.9/site-packages/pykwalify/core.py\", line 194, in validate\n        raise SchemaError(u\"Schema validation failed:\\n - {error_msg}.\".format(\n    pykwalify.errors.SchemaError: <SchemaError: error code 2: Schema validation failed:\n     - Enum '22' does not exist. Path: '/e' Enum: [0].\n     - Value '[{'nid': 20, 'e': 22, 'err_msg': 'No NID supported controls specified'}, {'nid': 1022, 'e': 22, 'err_msg': 'Control (Node Power Limit) value (5036) is greater than maximum (925)'}]' is not of type 'none'. Path: '/nids'.: Path: '/'>\n\n    The above exception was the direct cause of the following exception:\n\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/response/base.py\", line 152, in _maybe_run_validate_functions\n        vf(response)\n      File \"/usr/lib/python3.9/site-packages/tavern/util/extfunctions.py\", line 98, in inner\n        result = func(response, *args, **kwargs)\n      File \"/usr/lib/python3.9/site-packages/tavern/testutils/helpers.py\", line 103, in validate_pykwalify\n        verify_generic(to_verify, schema)\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 109, in verify_generic\n        raise BadSchemaError() from e\n    tavern.util.exceptions.BadSchemaError","time":{"start":1710232127169,"stop":1710232127313,"duration":144}},{"uid":"ea8497bf1e94a25f","status":"passed","time":{"start":1710145716484,"stop":1710145716757,"duration":273}},{"uid":"f10ff2168818013c","status":"passed","time":{"start":1710059383821,"stop":1710059384087,"duration":266}},{"uid":"a5d1b68c98019f7a","status":"passed","time":{"start":1709972957987,"stop":1709972958238,"duration":251}},{"uid":"4aab072ddba5e1db","status":"failed","statusDetails":"tavern.util.exceptions.TestFailError: Test 'capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes' failed:\n- Error calling validate function '<function validate_pykwalify at 0x7fc2a1eac5e0>':\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 106, in verify_generic\n        verifier.validate()\n      File \"/usr/lib/python3.9/site-packages/pykwalify/core.py\", line 194, in validate\n        raise SchemaError(u\"Schema validation failed:\\n - {error_msg}.\".format(\n    pykwalify.errors.SchemaError: <SchemaError: error code 2: Schema validation failed:\n     - Enum '22' does not exist. Path: '/e' Enum: [0].\n     - Value '[{'nid': 1028, 'e': 22, 'err_msg': 'Control (Node Power Limit) value (5036) is greater than maximum (925)'}, {'nid': 20, 'e': 22, 'err_msg': 'No NID supported controls specified'}]' is not of type 'none'. Path: '/nids'.: Path: '/'>\n\n    The above exception was the direct cause of the following exception:\n\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/response/base.py\", line 152, in _maybe_run_validate_functions\n        vf(response)\n      File \"/usr/lib/python3.9/site-packages/tavern/util/extfunctions.py\", line 98, in inner\n        result = func(response, *args, **kwargs)\n      File \"/usr/lib/python3.9/site-packages/tavern/testutils/helpers.py\", line 103, in validate_pykwalify\n        verify_generic(to_verify, schema)\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 109, in verify_generic\n        raise BadSchemaError() from e\n    tavern.util.exceptions.BadSchemaError","time":{"start":1709886581731,"stop":1709886581876,"duration":145}},{"uid":"858b3980aa32d164","status":"failed","statusDetails":"tavern.util.exceptions.TestFailError: Test 'capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes' failed:\n- Error calling validate function '<function validate_pykwalify at 0x7f07a8b395e0>':\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 106, in verify_generic\n        verifier.validate()\n      File \"/usr/lib/python3.9/site-packages/pykwalify/core.py\", line 194, in validate\n        raise SchemaError(u\"Schema validation failed:\\n - {error_msg}.\".format(\n    pykwalify.errors.SchemaError: <SchemaError: error code 2: Schema validation failed:\n     - Enum '22' does not exist. Path: '/e' Enum: [0].\n     - Value '[{'nid': 1017, 'e': 22, 'err_msg': 'Control (Node Power Limit) value (5036) is greater than maximum (925)'}, {'nid': 20, 'e': 22, 'err_msg': 'No NID supported controls specified'}]' is not of type 'none'. Path: '/nids'.: Path: '/'>\n\n    The above exception was the direct cause of the following exception:\n\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/response/base.py\", line 152, in _maybe_run_validate_functions\n        vf(response)\n      File \"/usr/lib/python3.9/site-packages/tavern/util/extfunctions.py\", line 98, in inner\n        result = func(response, *args, **kwargs)\n      File \"/usr/lib/python3.9/site-packages/tavern/testutils/helpers.py\", line 103, in validate_pykwalify\n        verify_generic(to_verify, schema)\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 109, in verify_generic\n        raise BadSchemaError() from e\n    tavern.util.exceptions.BadSchemaError","time":{"start":1709800146564,"stop":1709800146709,"duration":145}},{"uid":"4be6612e0ce13459","status":"passed","time":{"start":1709713808019,"stop":1709713808276,"duration":257}},{"uid":"d24a0177e71351df","status":"passed","time":{"start":1709627374835,"stop":1709627375094,"duration":259}},{"uid":"9400b264330f5272","status":"passed","time":{"start":1709541701784,"stop":1709541702045,"duration":261}},{"uid":"49bb2dee1a4a3cbf","status":"passed","time":{"start":1709454561545,"stop":1709454561807,"duration":262}},{"uid":"db5f7da0f758a76b","status":"passed","time":{"start":1709368107162,"stop":1709368107402,"duration":240}},{"uid":"e8b3a90135659a6f","status":"failed","statusDetails":"tavern.util.exceptions.TestFailError: Test 'capmcAPISetPowerCap - test2 - set_power_cap for two ready nodes' failed:\n- Error calling validate function '<function validate_pykwalify at 0x7f5a07fcb4c0>':\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 106, in verify_generic\n        verifier.validate()\n      File \"/usr/lib/python3.9/site-packages/pykwalify/core.py\", line 194, in validate\n        raise SchemaError(u\"Schema validation failed:\\n - {error_msg}.\".format(\n    pykwalify.errors.SchemaError: <SchemaError: error code 2: Schema validation failed:\n     - Enum '22' does not exist. Path: '/e' Enum: [0].\n     - Value '[{'nid': 20, 'e': 22, 'err_msg': 'No NID supported controls specified'}, {'nid': 1015, 'e': 22, 'err_msg': 'Control (Node Power Limit) value (5036) is greater than maximum (925)'}]' is not of type 'none'. Path: '/nids'.: Path: '/'>\n\n    The above exception was the direct cause of the following exception:\n\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.9/site-packages/tavern/response/base.py\", line 152, in _maybe_run_validate_functions\n        vf(response)\n      File \"/usr/lib/python3.9/site-packages/tavern/util/extfunctions.py\", line 98, in inner\n        result = func(response, *args, **kwargs)\n      File \"/usr/lib/python3.9/site-packages/tavern/testutils/helpers.py\", line 103, in validate_pykwalify\n        verify_generic(to_verify, schema)\n      File \"/usr/lib/python3.9/site-packages/tavern/schemas/files.py\", line 109, in verify_generic\n        raise BadSchemaError() from e\n    tavern.util.exceptions.BadSchemaError","time":{"start":1709281787717,"stop":1709281787873,"duration":156}},{"uid":"99b697fb0ed75ebd","status":"passed","time":{"start":1709195373253,"stop":1709195373521,"duration":268}}]},"tags":[]},"source":"8139842e812b04c6.json","parameterValues":[]}