name: Nightly Integration
on:
  workflow_dispatch:
  pull_request:
  schedule:
  - cron: '0 8 * * *' # 8am every day UTC. 3 AM Central. This will trigger the action to run after the hms-build-workflow-dispatcher has rebuilt HMS images

permissions: read-all

jobs:
  determine-service-versions:
    name: Determine service versions
    runs-on: ubuntu-latest
    outputs:
      csm-releases: ${{ steps.extract-container-images.outputs.csm-releases }}
      images-by-csm-release: ${{ steps.extract-container-images.outputs.images-by-csm-release }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    
    - name: Install python dependencies
      shell: bash
      run: pip3 install -r requirements.txt

    - name: Extract container images from CSM manifests
      shell: bash
      id: extract-container-images
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ARTIFACTORY_ALGOL60_READONLY_USERNAME: ${{ secrets.ARTIFACTORY_ALGOL60_READONLY_USERNAME }}
        ARTIFACTORY_ALGOL60_READONLY_TOKEN: ${{ secrets.ARTIFACTORY_ALGOL60_READONLY_TOKEN }}
      run: |
        set -eux
        ./csm_manifest_extractor.py
        echo "images-by-csm-release=$(cat extractor-output-images_by_csm_release.json | jq -c)" >> $GITHUB_OUTPUT
        echo "csm-releases=$(cat extractor-output-images_by_csm_release.json | jq '. | keys' -c)" >> $GITHUB_OUTPUT
  

  integration-test:
    name: Integration test
    needs: determine-service-versions
    strategy:
      matrix:
        csm-release: ${{ fromJSON(needs.determine-service-versions.outputs.csm-releases) }}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
    - name: Hello world
      shell: bash
      run: |
        echo "CSM Branch: ${{ matrix.csm-release }}"
        echo "Images by csm release:"
        echo "${{ needs.determine-service-versions.outputs.images-by-csm-release }}"

    # Update container images in docker-compose.yaml
    # TODO

    # Stand up hms-simulation environment
    # TODO
